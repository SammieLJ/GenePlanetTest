version: '3.1'

services:
  #DataBase Service
  database:
    #Pull the latest mysql image
    image: mysql:8.0.22
    #Map port 3306 on the mysql container to port 3306 in the host
    ports:
      - "3306:3306"
    restart: always
    command: --default-authentication-plugin=mysql_native_password
    #Specify Environment Variables for mysql
    environment:
      MYSQL_ROOT_PASSWORD: example1234
  
  #Loadbalancer
  nginx:
    image: nginx:alpine
    hostname: 'nginx'
    volumes:
      - ../nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ../nginx/proxy.conf:/etc/nginx/proxy.conf:ro
      - ../nginx/ssl/localhost.crt:/etc/ssl/certs/localhost.crt:ro
      - ../nginx/ssl/localhost.key:/etc/ssl/certs/localhost.key:ro
      - ../nginx/logs/:/var/log/nginx/
    ports:
      - '80:80'
      - '443:443'
    depends_on:
      - api
    restart: always

  #Adminer, to set MySQL with user and table
  adminer:
    image: adminer
    restart: always
    ports:
      - 8080:8080

  #API web server
  api:
    #container_name: api
    build: ../src
    ports:
      - '5000'
    restart: always
    #This Service Depends on the database service specifed above
    depends_on: 
      - database
    #Specify Environment Variables for the Api Service
    environment: 
      - DBHOST=database
    #Name our custom api image
    image: api:latest
    #Deploy with three replicas in the case one of the containers fails (only in Docker Swarm)
    deploy:
      mode: replicated
      replicas: 2